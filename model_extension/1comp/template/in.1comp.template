# 3D simulation of VLP + Linker system
units 		lj
boundary 	p 	p 	p
atom_style 	hybrid 	charge 	sphere
neighbor	0.3	bin
neigh_modify	every	1	delay	0	check	yes 

## Create Simulation Box, Atoms ##
read_data	initCoords1comp.assembly

## Group Atoms by Type ##
group 	VLP 	type	1
group 	Linker 	type	2

## Defining Particle and Solvent Properties ##
mass	1	1
mass	2	0.0029024	# relative mass of linker (G6 dendrimer) to VLP (P22)
dielectric	78.54

## Variables taken from outside script ##
variable VLPCharge		equal 	USERVLPCHARGE				# in e units
variable SIGMAHCRAW		equal 	USERSIGMAHCRAW				# in nm
variable SALTCONC		equal 	USERSALTCONC 				# in M
variable VLPEScutoff		equal	USERVLPEScutoff				# in reduced units
variable LinkerEScutoff		equal	USERLinkerEScutoff			# in reduced units
variable VLPLinkerEScutoff	equal	USERVLPLinkerEScutoff			# in reduced units
variable RUNCOUNT		equal 	10000 #000				# 10000 short run

## Variables defining interparticle potentials ##
variable lB		equal 	0.714		# in nm, changes with solvent
variable VLPDiameterRAW	equal 56		# in nm
variable LinkerDiameterRAW equal 6.7		# in nm
variable VLPLJcutoff	equal	2^(1.0/6.0) 	# 2^(1/6) times the VLP diameter 

variable LinkerCharge	equal 	45			# in e units
variable LinkerDiameter	equal 	v_LinkerDiameterRAW/v_VLPDiameterRAW	# in reduced units adopted by this simulation 
variable LinkerLJcutoff	equal 	v_LinkerDiameter*(2^(1.0/6.0))	# 2^(1/6) times the linker diameter
variable SIGMAHC 	equal 	v_SIGMAHCRAW/v_VLPDiameterRAW
variable VLPLinkerLJcutoff	equal v_SIGMAHC*(2^(1.0/6.0))	# 2^(1/6) times the VLP-linker interaction lengthscale
variable DELTA		equal 	(1+v_LinkerDiameter)*0.5-v_SIGMAHC	# in reduced units
variable KAPPA		equal 	v_VLPDiameterRAW*sqrt(8*v_lB*v_SALTCONC*PI*0.6022141)	# in reduced units of (1 / vlp diameter)	
variable VLPChargeDLVO	equal	v_VLPCharge*exp(v_KAPPA*0.5)/(1+v_KAPPA*0.5)	# KAPPA is already in reduced units of the simulation
variable LinkerChargeDLVO equal v_LinkerCharge*exp(v_KAPPA*v_LinkerDiameter*0.5)/(1+v_KAPPA*v_LinkerDiameter*0.5) # both KAPPA and Linker diameter are in reduced units

print	"***** Linker diameter = ${LinkerDiameter} *****"
print	"***** sigmahc = ${SIGMAHC} *****"
print	"***** Delta = ${DELTA} *****"
print	"***** kappa = ${KAPPA} *****"
print	"***** VLP charge (DLVO) = ${VLPChargeDLVO} *****"
print	"***** Linker charge (DLVO) = ${LinkerChargeDLVO} *****"
print	"***** VLPLJcutoff = ${VLPLJcutoff} *****"

set	type	1	charge	${VLPChargeDLVO}	# qV_DLVO (in LJ units)    
set	type	2	charge	${LinkerChargeDLVO}	# qD_DLVO (in LJ units)

## Ascribing Initial Velocities ##
velocity	all	create	1.		4928459		rot yes		dist gaussian		units box	# 1kB*T, random seed, zero net ang.mom., gauss from MB stats

## Ascribing interparticle potentials: ##
pair_style	hybrid/overlay	lj/expand  	${VLPLJcutoff}		coul/debye	${KAPPA} ${VLPEScutoff}	# LJ cut without delta, kappa, ES cut
pair_coeff	1	1	lj/expand	1	1.			0	${VLPLJcutoff}		# epsilon, sigma, delta V-V, cutoff V-V
pair_coeff	1	1	coul/debye	${VLPEScutoff}							# V-V ES_cut
pair_coeff	1	2	lj/expand	1	${SIGMAHC}	${DELTA}	${VLPLinkerLJcutoff}	# epsilon, sigma_hc, delta_V-D, global cutoff
pair_coeff	1	2	coul/debye	${VLPLinkerEScutoff}						# V-D ES_cut
pair_coeff	2	2	lj/expand	1	${LinkerDiameter}	0	${LinkerLJcutoff} 	# epsilon, sigma_hc, delta D-D, cutoff D-D
pair_coeff	2	2	coul/debye	${LinkerEScutoff}						# D-D ES_cut
pair_modify	shift	yes											# the additive e_LJ for repulsion-only    
    
variable	DeltaTIME	equal	0.000025
timestep	${DeltaTIME}
variable	DumpFreqVLP	equal	v_RUNCOUNT/1000
variable	DumpFreqAll	equal	v_RUNCOUNT/100
variable	ThermoFreq	equal   v_RUNCOUNT/10000
variable	RestartFreq	equal   v_RUNCOUNT/5

## Define Computes for Output ##
compute	VLPtemp		VLP	temp
compute	Linkertemp 	Linker	temp
compute	VLPPEVec	VLP	pe/atom
compute VLPKEVec 	VLP	ke/atom
compute LinkerPEVec	Linker	pe/atom
compute LinkerKEVec	Linker	ke/atom
compute	VLPPEavg	VLP	reduce	ave c_VLPPEVec
compute	VLPKEavg	VLP	reduce	ave c_VLPKEVec
compute	LinkerPEavg	Linker	reduce	ave c_LinkerPEVec
compute	LinkerKEavg	Linker	reduce	ave c_LinkerKEVec

## Defining Output Information ##
dump	VLPdata		VLP	custom		${DumpFreqVLP}	dumpVLP.melt	id	type	x	y	z
dump	ALLdata		all	custom		${DumpFreqAll}	dumpAll.melt	id	type	x	y	z

## Ensemble Fixes ##
## NVT (main simulation) ##
fix		NVTensemble	all	nvt	temp	1.	1.	0.0025	# T_start, T_stop, T_damp=100*timestep

thermo_style	custom	step temp c_VLPtemp c_Linkertemp c_VLPKEavg c_LinkerKEavg c_VLPPEavg c_LinkerPEavg etotal pe press
thermo_modify norm no
thermo	${ThermoFreq}
restart	${RestartFreq}	Restartc${SALTCONC}.*
run	${RUNCOUNT}

unfix		NVTensemble

undump		VLPdata
undump		ALLdata

uncompute	VLPtemp
uncompute	Linkertemp
uncompute	VLPPEVec
uncompute	VLPKEVec
uncompute	LinkerPEVec
uncompute	LinkerKEVec
uncompute	VLPPEavg
uncompute	VLPKEavg
uncompute	LinkerPEavg
uncompute	LinkerKEavg
